;; .emacs

;;; uncomment for CJK utf-8 support for non-Asian users
;; (require 'un-define)

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  ;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  ;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  (when (< emacs-major-version 24)
    ;; For important compatibility libraries like cl-lib
    (add-to-list 'package-archives '("gnu" . (concat proto "://elpa.gnu.org/packages/")))))
(package-initialize)

;; Delete extra whitespaces when saving
(add-hook 'before-save-hook 'delete-trailing-whitespace)
(add-hook 'before-save-hook 'whitespace-cleanup)

;; Show the column number
(column-number-mode 1)
(show-paren-mode 1)

;; Prevent creation of backup files by moving them
(setq backup-directory-alist `(("." . "~/.saves")))

;; Epitech's configuration
(add-to-list 'load-path "~/.emacs.d/lisp")
(load "std.el")
(load "std_comment.el")

;; Remove the top menu bar
(menu-bar-mode -1)

;; Linum: line numbers on left
(global-linum-mode 1)

;; Linum: highlight current line
(require 'linum-highlight-current-line-number)
(setq linum-format 'linum-highlight-current-line-number)

;; Company
(add-hook 'after-init-hook 'global-company-mode)

;; Powerline
(require 'powerline)
(setq-default mode-line-format
              (list "%e"
                    '(:eval (append
                              (list
                                      (powerline-lcl            'left   nil  )
                                      (powerline-rmw            'left   nil  )
                                      (powerline-buffer-id      'left   nil  powerline-color1  )
                                      (powerline-major-mode     'left        powerline-color1  )
                                      (powerline-minor-modes    'left        powerline-color1  )
                                      (powerline-narrow         'left        powerline-color1  powerline-color2  )
                                      (powerline-vc             'center                        powerline-color2  ))
        (powerline-pull-right (list
                                      (powerline-row            'right       powerline-color1  powerline-color2  )
                                      (powerline-make-text      ":"          powerline-color1  )
                                      (powerline-column         'right       powerline-color1  )))
))))

;; NeoTree
(setq neo-theme (if (display-graphic-p) 'icons 'arrow))
(global-set-key [f8] 'neotree-toggle)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (monokai)))
 '(custom-safe-themes
   (quote
    ("eea01f540a0f3bc7c755410ea146943688c4e29bea74a29568635670ab22f9bc" "d3a406c5905923546d8a3ad0164a266deaf451856eca5f21b36594ffcb08413a" "ff7625ad8aa2615eae96d6b4469fcc7d3d20b2e1ebc63b761a349bebbb9d23cb" default)))
 '(inhibit-startup-screen t)
 '(package-selected-packages
   (quote
    (fish-mode jenkins emoji-fontset rust-mode vue-mode html5-schema php-mode company neotree monokai-alt-theme monokai-theme dracula-theme undo-tree ##))))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:background "nil"))))
 '(linum ((t (:inherit (shadow default) :background "black"))))
 '(neo-banner-face ((t (:foreground "#5FD7FF" :weight bold))))
 '(neo-dir-link-face ((t (:foreground "#5FD7FF"))))
 '(neo-header-face ((t (:foreground "#FFFAFA"))))
 '(neo-root-dir-face ((t (:foreground "#87D700")))))
